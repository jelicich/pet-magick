<?php

/**
 * BasePets
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ID_PET
 * @property string $NAME
 * @property string $BREED
 * @property string $TRAITS
 * @property string $STORY
 * @property integer $USER_ID
 * @property integer $ANIMAL_CATEGORY_ID
 * @property integer $PIC_ID
 * @property integer $ALBUM_ID
 * @property Users $Users
 * @property AnimalCategories $AnimalCategories
 * @property Pics $Pics
 * @property Albums $Albums
 * @property Doctrine_Collection $Tributes
 * @property Doctrine_Collection $Videos
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePets extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('pets');
        $this->hasColumn('ID_PET', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('NAME', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('BREED', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TRAITS', 'string', 300, array(
             'type' => 'string',
             'length' => 300,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('STORY', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('USER_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ANIMAL_CATEGORY_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('PIC_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ALBUM_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'USER_ID',
             'foreign' => 'ID_USER'));

        $this->hasOne('AnimalCategories', array(
             'local' => 'ANIMAL_CATEGORY_ID',
             'foreign' => 'ID_ANIMAL_CATEGORY'));

        $this->hasOne('Pics', array(
             'local' => 'PIC_ID',
             'foreign' => 'ID_PIC'));

        $this->hasOne('Albums', array(
             'local' => 'ALBUM_ID',
             'foreign' => 'ID_ALBUM'));

        $this->hasMany('Tributes', array(
             'local' => 'ID_PET',
             'foreign' => 'PET_ID'));

        $this->hasMany('Videos', array(
             'local' => 'ID_PET',
             'foreign' => 'PET_ID'));
    }
}