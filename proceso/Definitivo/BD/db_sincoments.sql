CREATE DATABASE pet_magick;
USE pet_magick;

/*COMENTARIOS:
Protocolo(?)
-Tablas en plural, minuscula
-Columnas en singular, mayuscula (salvo news pq es asi de movida)
-IDs de tablas ID_ + "nombre de tabla en sigunlar" (ej. ID_CITY)
-FK "nombre de tabla" + _ID (ej. CITY_ID)
-Guion bajo para cuando son dos palabras (ej. animal_categories)
-Picture siempre lo abrevie como pic pq me gusta no se
=====


Chequear bien los largos de los varchar evaluar si se necesita cambiar alguno a text
Chequear los not null
Chequear los char (son las url)

Estaba pensando en agregar un campo DATE en todas las tablas. cosa q si despues necesitamos filtrar algo este la opcion de la fecha. total es una gilada agregarlo, no s√© q pensas
*/

/* ---------------- */
CREATE TABLE countries(
	ID_COUNTRY INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	COUNTRY VARCHAR(45) NOT NULL
);

/* ---------------- */
CREATE TABLE cities(
	ID_CITY INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	CITY VARCHAR(45) NOT NULL,
	COUNTRY_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(COUNTRY_ID) REFERENCES countries(ID_COUNTRY)
);

/* ---------------- */
CREATE TABLE users(
	ID_USER INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	NAME VARCHAR(45) NOT NULL,
	LASTNAME VARCHAR(45) NOT NULL,
	NICKNAME VARCHAR(45) NOT NULL UNIQUE,
	EMAIL VARCHAR(45) NOT NULL UNIQUE,
	PASSWORD VARCHAR(45) NOT NULL,
	ABOUT VARCHAR(45),
	PROFILEPIC VARCHAR(45),
	RANK TINYINT(1) UNSIGNED NOT NULL, /* Aca probe de todo y solo funciono cuando cambie RANGE x RANGO. Parece ser q el problema es el nombre, raro... */
	CITY_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(CITY_ID) REFERENCES cities(ID_CITY)
);

/* ---------------- */
CREATE TABLE animal_categories(
	ID_ANIMAL_CATEGORY INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	NAME VARCHAR(45) NOT NULL
);

/* ---------------- */
CREATE TABLE pets(
	ID_PET INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	NAME VARCHAR(45) NOT NULL,
	BREED VARCHAR(45),
	TRAITS VARCHAR(100),
	STORY VARCHAR(300),
	PROFILEPIC CHAR(30),
	USER_ID INT UNSIGNED NOT NULL,
	ANIMAL_CATEGORY_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER),
	FOREIGN KEY(ANIMAL_CATEGORY_ID) REFERENCES animal_categories(ID_ANIMAL_CATEGORY)
);

/* ---------------- */
CREATE TABLE tributes(
	ID_TRIBUTE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	TITLE VARCHAR(100) NOT NULL,
	CONTENT TEXT NOT NULL,
	NAME VARCHAR(45) NOT NULL,
	BREED VARCHAR(45),
	SINCE DATE NOT NULL,
	THRU DATE NOT NULL, /* Aca probe de todo y solo funciono cuando cambie TO x HASTA. Parece ser q el problema es el nombre, raro... */
	PIC CHAR(30), 
	USER_ID INT UNSIGNED NOT NULL,
	PET_ID INT UNSIGNED, 

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER),
	FOREIGN KEY(PET_ID) REFERENCES pets(ID_PET)
);

/* ---------------- */
CREATE TABLE vet_talk(
	ID_VET_TALK INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	TITLE VARCHAR(100) NOT NULL,
	CONTENT TEXT NOT NULL,
	DATE DATE NOT NULL,
	USER_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */ 
CREATE TABLE news(
	ID_NEWS INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	NEWS VARCHAR(300) NOT NULL,
	DATE DATE NOT NULL,
	USER_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */
CREATE TABLE organizations(
	ID_ORGANIZATION INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	NAME VARCHAR(100) NOT NULL, 
	DESCRIPTION TEXT NOT NULL,
	USER_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */
CREATE TABLE blogs(
	ID_BLOG INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	TITLE VARCHAR(100) NOT NULL,
	CONTENT TEXT NOT NULL,
	DATE DATE NOT NULL,
	USER_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */
CREATE TABLE projects(
	ID_PROJECT INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	TITLE VARCHAR(100) NOT NULL,
	DESCRIPTION TEXT NOT NULL,
	USER_ID INT UNSIGNED NOT NULL,
	
	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */
CREATE TABLE pics(
	ID_PIC INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	PIC VARCHAR(100) NOT NULL,
	DATE DATE NOT NULL,
	CAPTION VARCHAR(100), 
	USER_ID INT UNSIGNED NOT NULL, /* LE AGREGUE NOT NULL para que siempre se guarde el id del usuario que la sube*/
	PET_ID INT UNSIGNED,
	BLOG_ID INT UNSIGNED,
	ORGANIZATION_ID INT UNSIGNED,
	VET_TALK_ID INT UNSIGNED,
	THUMBNAIL INT UNSIGNED,
	
	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER),
	FOREIGN KEY(PET_ID) REFERENCES pets(ID_PET),
	FOREIGN KEY(BLOG_ID) REFERENCES blogs(ID_BLOG),
	FOREIGN KEY(ORGANIZATION_ID) REFERENCES organizations(ID_ORGANIZATION),
	FOREIGN KEY(VET_TALK_ID) REFERENCES vet_talk(ID_VET_TALK),
	FOREIGN KEY(THUMBNAIL) REFERENCES pics(ID_PIC)
);

CREATE TABLE albums(
	ID_ALBUM INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	USER_ID INT UNSIGNED NOT NULL,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */
CREATE TABLE videos(
	ID_VIDEO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	VIDEO CHAR(30) NOT NULL,
	TITLE VARCHAR(100) NOT NULL,
	CAPTION VARCHAR(300) NOT NULL,
	THUMBNAIL CHAR(30) NOT NULL,
	DATE DATE NOT NULL,
	PET_ID INT UNSIGNED,

	FOREIGN KEY(PET_ID) REFERENCES pets(ID_PET)
);

/* ---------------- */ /*INBOX*/
CREATE TABLE messages(
	ID_MESSAGE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	FROM_USER_ID INT UNSIGNED NOT NULL,
	TO_USER_ID INT UNSIGNED NOT NULL,
	SUBJECT VARCHAR(100) NOT NULL,
	MESSAGE TEXT,
	STATUS TINYINT(1) NOT NULL,
	DATE DATE NOT NULL,

	FOREIGN KEY(FROM_USER_ID) REFERENCES users(ID_USER),
	FOREIGN KEY(TO_USER_ID) REFERENCES users(ID_USER)
);

/* ---------------- */ 
CREATE TABLE ads(
	ID_AD INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	AD CHAR(30) NOT NULL,
	LINK INT UNSIGNED NOT NULL,
	DATE DATE NOT NULL,
	DATE_FROM DATE,
	DATE_TO DATE,
	STATUS TINYINT(1) NOT NULL
);

/* ---------------- */ 
CREATE TABLE comments(
	ID_COMMENT INT UNSIGNED PRIMARY KEY AUTO_INCREMENT, 
	COMMENT VARCHAR(300) NOT NULL, /* Aca tenias un UNSIGNED en un tipo de dato texto */
	DATE DATE NOT NULL,
	USER_ID INT UNSIGNED NOT NULL,
	TRIBUTE_ID INT UNSIGNED,

	FOREIGN KEY(USER_ID) REFERENCES users(ID_USER),
	FOREIGN KEY(TRIBUTE_ID) REFERENCES tributes(ID_TRIBUTE)
);
